{"version":3,"file":"index.js","mappings":"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","sources":["webpack://@sentry-internal/global-search/./node_modules/crypto-browserify/index.js","webpack://@sentry-internal/global-search/external commonjs \"browserify-cipher\"","webpack://@sentry-internal/global-search/external commonjs \"browserify-sign\"","webpack://@sentry-internal/global-search/external commonjs \"browserify-sign/algos\"","webpack://@sentry-internal/global-search/external commonjs \"create-ecdh\"","webpack://@sentry-internal/global-search/external commonjs \"create-hash\"","webpack://@sentry-internal/global-search/external commonjs \"create-hmac\"","webpack://@sentry-internal/global-search/external commonjs \"diffie-hellman\"","webpack://@sentry-internal/global-search/external commonjs \"pbkdf2\"","webpack://@sentry-internal/global-search/external commonjs \"public-encrypt\"","webpack://@sentry-internal/global-search/external commonjs \"randombytes\"","webpack://@sentry-internal/global-search/external commonjs \"randomfill\"","webpack://@sentry-internal/global-search/webpack/bootstrap","webpack://@sentry-internal/global-search/webpack/runtime/compat get default export","webpack://@sentry-internal/global-search/webpack/runtime/define property getters","webpack://@sentry-internal/global-search/webpack/runtime/hasOwnProperty shorthand","webpack://@sentry-internal/global-search/webpack/runtime/make namespace object","webpack://@sentry-internal/global-search/external commonjs \"@babel/runtime/helpers/toConsumableArray\"","webpack://@sentry-internal/global-search/external commonjs \"@babel/runtime/helpers/asyncToGenerator\"","webpack://@sentry-internal/global-search/external commonjs \"@babel/runtime/helpers/defineProperty\"","webpack://@sentry-internal/global-search/external commonjs \"@babel/runtime/helpers/classCallCheck\"","webpack://@sentry-internal/global-search/external commonjs \"@babel/runtime/helpers/createClass\"","webpack://@sentry-internal/global-search/external commonjs \"@babel/runtime/regenerator\"","webpack://@sentry-internal/global-search/external commonjs \"algoliasearch/lite\"","webpack://@sentry-internal/global-search/external commonjs \"title-case\"","webpack://@sentry-internal/global-search/./src/sentry-global-search/lib/pretty-path.ts","webpack://@sentry-internal/global-search/./src/sentry-global-search/lib/transformers.ts","webpack://@sentry-internal/global-search/./src/sentry-global-search/lib/config.ts","webpack://@sentry-internal/global-search/./src/sentry-global-search/sentry-global-search.ts","webpack://@sentry-internal/global-search/./src/sentry-algolia-index-settings.ts","webpack://@sentry-internal/global-search/./src/html-to-algolia-record/lib/hash-object.ts","webpack://@sentry-internal/global-search/./src/html-to-algolia-record/lib/get-child-text.ts","webpack://@sentry-internal/global-search/external commonjs \"htmlparser2\"","webpack://@sentry-internal/global-search/external commonjs \"domhandler\"","webpack://@sentry-internal/global-search/./src/html-to-algolia-record/lib/html-to-ast.ts","webpack://@sentry-internal/global-search/external commonjs \"css-select\"","webpack://@sentry-internal/global-search/./src/html-to-algolia-record/html-to-algolia-record.ts","webpack://@sentry-internal/global-search/./src/sentry-global-search/lib/standard-sdk-slug.ts","webpack://@sentry-internal/global-search/./src/sentry-global-search/lib/extrapolate.ts","webpack://@sentry-internal/global-search/./src/index.ts"],"sourcesContent":["'use strict'\n\nexports.randomBytes = exports.rng = exports.pseudoRandomBytes = exports.prng = require('randombytes')\nexports.createHash = exports.Hash = require('create-hash')\nexports.createHmac = exports.Hmac = require('create-hmac')\n\nvar algos = require('browserify-sign/algos')\nvar algoKeys = Object.keys(algos)\nvar hashes = ['sha1', 'sha224', 'sha256', 'sha384', 'sha512', 'md5', 'rmd160'].concat(algoKeys)\nexports.getHashes = function () {\n  return hashes\n}\n\nvar p = require('pbkdf2')\nexports.pbkdf2 = p.pbkdf2\nexports.pbkdf2Sync = p.pbkdf2Sync\n\nvar aes = require('browserify-cipher')\n\nexports.Cipher = aes.Cipher\nexports.createCipher = aes.createCipher\nexports.Cipheriv = aes.Cipheriv\nexports.createCipheriv = aes.createCipheriv\nexports.Decipher = aes.Decipher\nexports.createDecipher = aes.createDecipher\nexports.Decipheriv = aes.Decipheriv\nexports.createDecipheriv = aes.createDecipheriv\nexports.getCiphers = aes.getCiphers\nexports.listCiphers = aes.listCiphers\n\nvar dh = require('diffie-hellman')\n\nexports.DiffieHellmanGroup = dh.DiffieHellmanGroup\nexports.createDiffieHellmanGroup = dh.createDiffieHellmanGroup\nexports.getDiffieHellman = dh.getDiffieHellman\nexports.createDiffieHellman = dh.createDiffieHellman\nexports.DiffieHellman = dh.DiffieHellman\n\nvar sign = require('browserify-sign')\n\nexports.createSign = sign.createSign\nexports.Sign = sign.Sign\nexports.createVerify = sign.createVerify\nexports.Verify = sign.Verify\n\nexports.createECDH = require('create-ecdh')\n\nvar publicEncrypt = require('public-encrypt')\n\nexports.publicEncrypt = publicEncrypt.publicEncrypt\nexports.privateEncrypt = publicEncrypt.privateEncrypt\nexports.publicDecrypt = publicEncrypt.publicDecrypt\nexports.privateDecrypt = publicEncrypt.privateDecrypt\n\n// the least I can do is make error messages for the rest of the node.js/crypto api.\n// ;[\n//   'createCredentials'\n// ].forEach(function (name) {\n//   exports[name] = function () {\n//     throw new Error([\n//       'sorry, ' + name + ' is not implemented yet',\n//       'we accept pull requests',\n//       'https://github.com/crypto-browserify/crypto-browserify'\n//     ].join('\\n'))\n//   }\n// })\n\nvar rf = require('randomfill')\n\nexports.randomFill = rf.randomFill\nexports.randomFillSync = rf.randomFillSync\n\nexports.createCredentials = function () {\n  throw new Error([\n    'sorry, createCredentials is not implemented yet',\n    'we accept pull requests',\n    'https://github.com/crypto-browserify/crypto-browserify'\n  ].join('\\n'))\n}\n\nexports.constants = {\n  'DH_CHECK_P_NOT_SAFE_PRIME': 2,\n  'DH_CHECK_P_NOT_PRIME': 1,\n  'DH_UNABLE_TO_CHECK_GENERATOR': 4,\n  'DH_NOT_SUITABLE_GENERATOR': 8,\n  'NPN_ENABLED': 1,\n  'ALPN_ENABLED': 1,\n  'RSA_PKCS1_PADDING': 1,\n  'RSA_SSLV23_PADDING': 2,\n  'RSA_NO_PADDING': 3,\n  'RSA_PKCS1_OAEP_PADDING': 4,\n  'RSA_X931_PADDING': 5,\n  'RSA_PKCS1_PSS_PADDING': 6,\n  'POINT_CONVERSION_COMPRESSED': 2,\n  'POINT_CONVERSION_UNCOMPRESSED': 4,\n  'POINT_CONVERSION_HYBRID': 6\n}\n","module.exports = require(\"browserify-cipher\");","module.exports = require(\"browserify-sign\");","module.exports = require(\"browserify-sign/algos\");","module.exports = require(\"create-ecdh\");","module.exports = require(\"create-hash\");","module.exports = require(\"create-hmac\");","module.exports = require(\"diffie-hellman\");","module.exports = require(\"pbkdf2\");","module.exports = require(\"public-encrypt\");","module.exports = require(\"randombytes\");","module.exports = require(\"randomfill\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/toConsumableArray\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/asyncToGenerator\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/defineProperty\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/classCallCheck\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/createClass\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/regenerator\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"algoliasearch/lite\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"title-case\");","import { titleCase } from 'title-case';\n\n// The left hand side is the text to match, right hand side the text to replace.\n// Left hand side text is case insensitive.\nconst SPECIAL_CASES = {\n  javascript: 'JavaScript',\n  typescript: 'TypeScript',\n  sdk: 'SDK',\n  api: 'API',\n} as const;\n\nconst prettyPath = (input: string) => {\n  const specialCases = Object.keys(SPECIAL_CASES).reduce(\n    (a, k) => ({ ...a, [k.toLowerCase()]: SPECIAL_CASES[k] }),\n    {}\n  );\n\n  const segments = input.split('/').filter(Boolean);\n  const re = new RegExp(`(${Object.keys(specialCases).join('|')})`, 'gi');\n  const recased = segments.map(x => {\n    const titlecased = titleCase(decodeURIComponent(x).replace(/-/, ' '));\n    const customCases = titlecased.split(re);\n    const replaced = customCases.map(x => specialCases[x.toLowerCase()] || x);\n    return replaced.join('');\n  });\n\n  return recased.join(' > ');\n};\n\nexport default prettyPath;\n","import prettyPath from './pretty-path';\nimport { Transformer, Hit } from './types';\n\nexport const transformDocsGatsbyHit: Transformer = hit => {\n  const obj: Hit = {\n    id: hit.objectID,\n    site: 'docs',\n    url: `https://docs.sentry.io${hit.url}`,\n    context: {\n      context1: prettyPath(hit.url),\n    },\n  };\n\n  if (hit._highlightResult) obj.title = hit._highlightResult.section.value;\n  if (hit._snippetResult) obj.text = hit._snippetResult.text.value;\n  return obj;\n};\n\nexport const transformDevelopHit: Transformer = hit => {\n  const obj: Hit = {\n    id: hit.objectID,\n    site: 'develop',\n    url: `https://develop.sentry.dev${hit.url}`,\n    context: {\n      context1: prettyPath(hit.url),\n    },\n  };\n\n  if (hit._highlightResult) obj.title = hit._highlightResult.section.value;\n  if (hit._snippetResult) obj.text = hit._snippetResult.text.value;\n  return obj;\n};\n\nexport const transformHelpCenterHit: Transformer = hit => {\n  const obj: Hit = {\n    id: hit.objectID,\n    site: 'blog',\n    context: {\n      ...hit.context\n    },\n    url: `https://help.sentry.io${hit.url}${\n      hit.anchor ? `#${hit.anchor}` : ''\n    }`,\n  };\n\n  if (hit._highlightResult) obj.title = hit._highlightResult.section.value;\n  if (hit._snippetResult) obj.text = hit._snippetResult.text.value;\n  return obj;\n};\n\nexport const transformBlogHit: Transformer = hit => {\n  const obj: Hit = {\n    id: hit.objectID,\n    site: 'blog',\n    context: {\n      context1: hit.title,\n    },\n    url: `https://blog.sentry.io${hit.url}${\n      hit.anchor ? `#${hit.anchor}` : ''\n    }`,\n  };\n\n  if (hit._highlightResult) obj.title = hit._highlightResult.section.value;\n  if (hit._snippetResult) obj.text = hit._snippetResult.text.value;\n  return obj;\n};\n","import { SearchOptions } from '@algolia/client-search';\n\nimport { Config } from './types';\nimport * as Transformers from './transformers';\n\nconst config = (\n  settings: Omit<Config, 'pathBias' | 'platformBias' | 'legacyBias'>\n) => {\n  return {\n    pathBias: false,\n    platformBias: true,\n    legacyBias: true,\n    ...settings,\n  };\n};\n\nexport const defaultQueryParams: Partial<SearchOptions> = {\n  snippetEllipsisText: '…',\n  highlightPreTag: '<mark>',\n  highlightPostTag: '</mark>',\n};\n\nexport const sites = [\n  config({\n    site: 'docs',\n    name: 'Documentation',\n    indexes: [\n      {\n        indexName: 'sentry-docs',\n        transformer: Transformers.transformDocsGatsbyHit,\n      },\n    ],\n  }),\n  config({\n    site: 'develop',\n    name: 'Developer Documentation',\n    indexes: [\n      {\n        indexName: 'develop-docs',\n        transformer: Transformers.transformDevelopHit,\n      },\n    ],\n  }),\n  config({\n    site: 'help-center',\n    name: 'Help Center',\n    indexes: [\n      {\n        indexName: 'sentry-help',\n        transformer: Transformers.transformHelpCenterHit,\n      },\n    ],\n  }),\n  config({\n    site: 'blog',\n    name: 'Blog Posts',\n    indexes: [\n      {\n        indexName: 'sentry-blog-posts',\n        transformer: Transformers.transformBlogHit,\n      },\n    ],\n  }),\n];\n","import { MultipleQueriesQuery } from '@algolia/client-search';\nimport algoliasearch, { SearchClient } from 'algoliasearch/lite';\n\nimport { Config, SearchHit, Hit, Result, Site } from './lib/types';\nimport { sites, defaultQueryParams } from './lib/config';\n\nconst errorType = `SentryGlobalSearchError`;\n\ntype QueryArgs = {\n  path?: string;\n  platforms?: string[];\n  searchAllIndexes?: boolean;\n};\n\ntype OptionalFilters = Array<string | string[]>;\n\ntype Optional<T, K extends keyof T> = Pick<Partial<T>, K> & Omit<T, K>;\ntype ConstructorConfig = string | Optional<Config, 'indexes'>;\n\nclass SentryGlobalSearch {\n  configs: Config[];\n  client: SearchClient;\n\n  constructor(configs: ConstructorConfig[] = []) {\n    // Complain if no configuration has been provided\n    if (configs.length === 0 || !Array.isArray(configs)) {\n      throw new Error(\n        `${errorType}: SentryGlobalSearch must be initialized with an array that includes one or more of: ${sites\n          .map(x => x.site)\n          .join(', ')}.`\n      );\n    }\n\n    // Validate configuration\n    this.configs = configs.map(x => {\n      const config = typeof x === 'string' ? { site: x as Site } : x;\n      const defaults = sites.find(x => x.site === config.site);\n\n      if (!!defaults) return { ...defaults, ...config };\n\n      throw new Error(\n        `${errorType}: unknown site \"${config.site}\" in config.include`\n      );\n    });\n\n    // Create an Algolia client to work with\n    this.client = algoliasearch(\n      'OOK48W9UCL',\n      '2d64ec1106519cbc672d863b0d200782'\n    );\n    this.query = this.query.bind(this);\n  }\n\n  async query(query: string, args: QueryArgs = {}) {\n    if (!query) return [];\n\n    // Strip out all but Basic Latin, to minimize impact from bot search that\n    // uses random characters. We don't have localized docs so there's no point\n    // in searching non-latin characters.\n    const sanitizedQuery = query.replace(/[^\\u0020-\\u007f]/gi, '');\n\n    const { client, configs } = this;\n\n    const searchAllIndexes = args.searchAllIndexes || false;\n    const configsToSearch = searchAllIndexes ? configs : [configs[0]];\n\n    // Create a list of Algolia query objects from our configs\n    const queries = configsToSearch.reduce<MultipleQueriesQuery[]>(\n      (queries, config) => {\n        const optionalFilters: OptionalFilters = [];\n\n        if (config.pathBias && args.path) {\n          optionalFilters.push(`pathSegments:${args.path}`);\n        }\n\n        if (\n          config.platformBias &&\n          args.platforms &&\n          args.platforms.length > 0\n        ) {\n          optionalFilters.push(args.platforms.map(x => `platforms:${x}`));\n        }\n\n        if (config.legacyBias) {\n          optionalFilters.push(`legacy:0`);\n        }\n\n        const newQueries = config.indexes.map(({ indexName }) => {\n          const obj: MultipleQueriesQuery = {\n            indexName,\n            query: sanitizedQuery,\n            params: {\n              ...defaultQueryParams,\n              ...(optionalFilters.length && { optionalFilters }),\n            },\n          };\n          return obj;\n        });\n        return [...queries, ...newQueries];\n      },\n      []\n    );\n\n    // Get the search results\n    const { results: algoliaResults } = await client.search<SearchHit>(queries);\n\n    // Reduce and normalize the Algolia results\n    const results = configsToSearch.map(config => {\n      // If a site has more than one index, reduce them to one array.\n      const hits = config.indexes.reduce<Hit[]>((hits, index) => {\n        const algoliaResult = algoliaResults.find(\n          result => result.index === index.indexName\n        );\n\n        // if no result return early\n        if (!algoliaResult) {\n          return [...hits];\n        }\n\n        // Normalize the results into a consistent format\n        return [...hits, ...algoliaResult.hits.map(index.transformer)];\n      }, []);\n\n      return {\n        site: config.site,\n        name: config.name,\n        hits,\n      } as Result;\n    });\n\n    return results;\n  }\n}\n\nexport default SentryGlobalSearch;\n","import { Settings } from '@algolia/client-search';\n\n/**\n * These are the recommended settings for use with Sentry Algoli indexes.\n * requires an opinionated record style which can be created using\n * ./helpers/parseRecordsFromHTML\n */\nconst settings: Settings = {\n  snippetEllipsisText: '…',\n  hitsPerPage: 10,\n  highlightPreTag: '<mark>',\n  highlightPostTag: '</mark>',\n  attributesToSnippet: [`text:15`],\n  attributesToHighlight: ['section'],\n  attributesForFaceting: [\n    'filterOnly(pathSegments)',\n    'filterOnly(platforms)',\n    'filterOnly(legacy)',\n  ],\n  distinct: 1,\n  attributeForDistinct: 'section',\n  attributesToRetrieve: [\n    'text',\n    'title',\n    'section',\n    'url',\n    'anchor',\n    'context',\n  ],\n  searchableAttributes: ['unordered(section)', 'unordered(keywords)', 'text'],\n  customRanking: ['asc(sectionRank)', 'desc(position)'],\n  disableTypoToleranceOnWords: ['react', 'cli'],\n  advancedSyntax: true,\n};\n\nexport default settings;\n","import crypto from 'crypto';\n\n/**\n * Convert a value into a md5 string\n *\n * @param input The input value\n * @return The md5 sum of the input string\n */\nconst hashObject = (input: any) => {\n  const string = JSON.stringify(input);\n  return crypto.createHash('md5').update(string).digest('hex');\n};\n\nexport default hashObject;\n","/**\n * Recursively traverse an AST, flattening each node into its child text.\n */\nconst getChildText = (element): string => {\n  return element.children\n    .reduce((str, child) => {\n      let newStr: string | undefined;\n      if (child.type === 'text') {\n        newStr = child.data;\n      } else if (child.type === 'tag') {\n        newStr = getChildText(child);\n      }\n\n      newStr = newStr?.trim();\n\n      if (newStr) {\n        str += str ? ` ${newStr}` : newStr;\n      }\n\n      return str;\n    }, '')\n    .trim();\n};\n\nexport default getChildText;\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"htmlparser2\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"domhandler\");","import { Parser } from 'htmlparser2';\nimport { DomHandler } from 'domhandler';\n\n/**\n * Convert an HTML string into an AST\n */\nconst htmlToAST = (html: string): Promise<any> => {\n  return new Promise((resolve, reject) => {\n    const callback = (error, dom): void => {\n      if (error) {\n        reject(error);\n      } else {\n        resolve(dom);\n      }\n    };\n    const handler = new DomHandler(callback);\n    const parser = new Parser(handler);\n\n    parser.write(html);\n    parser.end();\n  });\n};\n\nexport default htmlToAST;\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"css-select\");","import { SearchHit } from '../sentry-global-search/lib/types';\nimport hashObject from './lib/hash-object';\nimport getChildText from './lib/get-child-text';\nimport htmlToAST from './lib/html-to-ast';\nimport { Meta } from './lib/types';\nimport { selectOne, selectAll, is } from 'css-select';\n\nconst INCLUDE = ['h1', 'h2', 'h3', 'p', 'li', '[data-index]'];\nconst EXCLUDE = ['[data-noindex]'];\n\nconst isDescendant = (testNode, highNode) => {\n  let test = testNode.parent;\n  while (test) {\n    if (highNode === test) return true;\n    test = test.parent;\n  }\n  return false;\n};\n\n/**\n * Create algolia record objects from HTML. Intended for use with the rendered\n * HTML generated from Markdown, which has a reliably flat structure.  See the\n * README for further details about the strategy this uses.\n *\n * @param html The HTML string\n * @param meta Additional content to be included in the record. At a minimum\n *             must include `title` and `url`\n */\nconst parseRecordsFromHTML = async (\n  html: string,\n  meta: Meta,\n  baseSelector?: string\n) => {\n  const { title } = meta;\n  const records: SearchHit[] = [];\n\n  // This object is merged into each record and is mutated to track headings\n  //and relevance\n  const initialValues = {\n    // id of the last heading seen\n    anchor: '',\n    // title of the page\n    section: title,\n    // h1 = 100, h2 = 90, h3 = 80\n    // Relevance decreases as nesting increases\n    sectionRank: 100,\n    // Incremented for each record. Relevance decreases as position increases\n    position: 0,\n  };\n\n  // Fetch the initial AST\n  let dom = await htmlToAST(html);\n\n  if (baseSelector) dom = selectOne(baseSelector, dom);\n\n  dom = selectAll(`${INCLUDE.join(',')}`, dom);\n  dom = dom.filter(x =>\n    is(x, `:not(${EXCLUDE.map(x => `${x}, ${x} *`).join(',')})`)\n  );\n\n  dom.reduce((acc, el) => {\n    const isChildOfExistingElement = !!dom.find(x => isDescendant(el, x));\n\n    if (isChildOfExistingElement) return acc;\n    const text = getChildText(el).trim();\n\n    // Update the context when we get a heading.\n    if (/h[1-3]/.test(el.name)) {\n      const level = parseInt(el.name[1], 10);\n      acc.anchor = el.attribs.id;\n      acc.section = text;\n      acc.sectionRank = 100 * (1 - 0.1 * (level - 1));\n\n      // We don't want to create records for titles, we just want the data, so\n      // we'll return here.\n      return acc;\n    }\n\n    // Keep track of where in the doc this is. Lower stuff is less important\n    acc.position++;\n\n    const record = { text, ...meta, ...acc };\n    records.push({ objectID: hashObject(record), ...record });\n\n    return acc;\n  }, initialValues);\n\n  return records;\n};\n\nexport default parseRecordsFromHTML;\n","// SDK slugs must follow the format entity.ecosystem[.flavor]¹. This provides a\n// handy way to map non-standard formatted slugs into the ones expected by the\n// platform result ranker. Values are matched in a case-insensitive manner.\n//\n// Left side is the slug matched, right side is the preferred slug.\n//\n// ¹ https://develop.sentry.dev/sdk/event-payloads/types/#clientsdkinfo\n// ² https://docs.google.com/spreadsheets/d/15zpY36yMaLcsZoYDzoiHmTAkK-xPSRYuw25TZ6vsii4/\n\nconst names = {\n  'sentry.rust': 'Rust',\n  'sentry.ruby': 'Ruby',\n  'sentry.react-native': 'React Native',\n  'sentry.python': 'Python',\n  'sentry.php': 'PHP',\n  'sentry.perl': 'Perl',\n  'sentry.node': 'Node',\n  'sentry.native': 'Native',\n  'sentry.javascript': 'JavaScript',\n  'sentry.java': 'Java',\n  'sentry.go': 'Go',\n  'sentry.flutter': 'Flutter',\n  'sentry.elixir': 'Elixir',\n  'sentry.dotnet': '.Net',\n  'sentry.cocoa': 'Cocoa',\n  'sentry.android': 'Android',\n} as const;\n\nconst synonyms = {\n  rust: 'sentry.rust',\n  ruby: 'sentry.ruby',\n  'react-native': 'sentry.react-native',\n  python: 'sentry.python',\n  php: 'sentry.php',\n  perl: 'sentry.perl',\n  node: 'sentry.node',\n  native: 'sentry.native',\n  javascript: 'sentry.javascript',\n  java: 'sentry.java',\n  go: 'sentry.go',\n  flutter: 'sentry.flutter',\n  elixir: 'sentry.elixir',\n  dotnet: 'sentry.dotnet',\n  cocoa: 'sentry.cocoa',\n  android: 'sentry.android',\n} as const;\n\nconst standardSDKSlug = (slug: string) => {\n  if (typeof slug !== 'string') return;\n  const validSlugs: Array<String> = Object.values(synonyms);\n  const isValidSlug: Boolean = validSlugs.indexOf(slug) >= 0;\n\n  const standardSlug: string = isValidSlug\n    ? slug\n    : synonyms[slug.toLowerCase()] ?? slug;\n  const name: string =\n    names[standardSlug] ??\n    standardSlug.charAt(0).toUpperCase() + standardSlug.slice(1);\n\n  return {\n    slug: standardSlug,\n    name,\n  };\n};\n\nexport default standardSDKSlug;\n","const extrapolate = (str: string, separator: string) => {\n  const segments = str.split(separator).filter(Boolean);\n  const fragments = segments.map((_segment, i, array) =>\n    array.slice(0, i + 1).join(separator)\n  );\n  return fragments;\n};\n\nexport default extrapolate;\n","export * from './sentry-global-search/lib/types';\n\nexport { default as SentryGlobalSearch } from './sentry-global-search/sentry-global-search';\nexport { default as sentryAlgoliaIndexSettings } from './sentry-algolia-index-settings';\nexport { default as htmlToAlgoliaRecord } from './html-to-algolia-record/html-to-algolia-record';\nexport { default as standardSDKSlug } from './sentry-global-search/lib/standard-sdk-slug';\nexport { default as extrapolate } from './sentry-global-search/lib/extrapolate';\n"],"names":["titleCase","SPECIAL_CASES","javascript","typescript","sdk","api","prettyPath","input","specialCases","Object","keys","reduce","a","k","toLowerCase","segments","split","filter","Boolean","re","RegExp","join","recased","map","x","titlecased","decodeURIComponent","replace","customCases","replaced","transformDocsGatsbyHit","hit","obj","id","objectID","site","url","context","context1","_highlightResult","title","section","value","_snippetResult","text","transformDevelopHit","transformHelpCenterHit","anchor","transformBlogHit","Transformers","config","settings","pathBias","platformBias","legacyBias","defaultQueryParams","snippetEllipsisText","highlightPreTag","highlightPostTag","sites","name","indexes","indexName","transformer","algoliasearch","errorType","SentryGlobalSearch","configs","length","Array","isArray","Error","defaults","find","client","query","bind","args","sanitizedQuery","searchAllIndexes","configsToSearch","queries","optionalFilters","path","push","platforms","newQueries","params","search","algoliaResults","results","hits","index","algoliaResult","result","hitsPerPage","attributesToSnippet","attributesToHighlight","attributesForFaceting","distinct","attributeForDistinct","attributesToRetrieve","searchableAttributes","customRanking","disableTypoToleranceOnWords","advancedSyntax","crypto","hashObject","string","JSON","stringify","createHash","update","digest","getChildText","element","children","str","child","newStr","type","data","trim","Parser","DomHandler","htmlToAST","html","Promise","resolve","reject","callback","error","dom","handler","parser","write","end","selectOne","selectAll","is","INCLUDE","EXCLUDE","isDescendant","testNode","highNode","test","parent","parseRecordsFromHTML","meta","baseSelector","records","initialValues","sectionRank","position","acc","el","isChildOfExistingElement","level","parseInt","attribs","record","names","synonyms","rust","ruby","python","php","perl","node","java","go","flutter","elixir","dotnet","cocoa","android","standardSDKSlug","slug","validSlugs","values","isValidSlug","indexOf","standardSlug","charAt","toUpperCase","slice","extrapolate","separator","fragments","_segment","i","array","default","sentryAlgoliaIndexSettings","htmlToAlgoliaRecord"],"sourceRoot":""}